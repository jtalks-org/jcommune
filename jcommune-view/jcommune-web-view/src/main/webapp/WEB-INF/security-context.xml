<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011  JTalks.org Team
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.
    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.
    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       ">
  <!-- Http Security -->
  <!--
      We need disable filtering of all resources e.g. js, css, images, errors to provide
      filtering of only one request to every page. Otherwise bug JC-1743 will occur.
  -->
  <security:http pattern="/resources/**" security="none"/>
  <security:http pattern="/admin/logo" security="none"/>
  <security:http pattern="/admin/icon/**" security="none"/>
  <security:http pattern="/errors/**" security="none"/>
  <security:http pattern="/users/*/avatar" security="none"/>

  <security:http pattern="/api/**" entry-point-ref="entryPoint403" use-expressions="true">
    <security:session-management session-authentication-strategy-ref="concurrentSessionControlStrategy"/>
    <security:intercept-url pattern="/api/**" access="isAuthenticated()"/>
  </security:http>

  <security:http auto-config="true" use-expressions="true" create-session="ifRequired" disable-url-rewriting="true">
    <security:session-management session-authentication-strategy-ref="concurrentSessionControlStrategy"/>
    <security:custom-filter ref="rememberMeCheckFilter" before="FORM_LOGIN_FILTER"/>
    <security:intercept-url pattern="/posts/new" access="isAuthenticated()"/>
    <security:intercept-url pattern="/posts/*/delete" method="GET" access="isAuthenticated()"/>
    <security:intercept-url pattern="/posts/*" method="DELETE" access="isAuthenticated()"/>
    <security:intercept-url pattern="/posts/*/edit" access="isAuthenticated()"/>

    <security:intercept-url pattern="/login" method="GET" access="permitAll()"/>
    <security:intercept-url pattern="/users/new" method="GET" access="permitAll()"/>
    <security:intercept-url pattern="/user" method="GET" access="isAuthenticated()"/>
    <security:intercept-url pattern="/user/" method="GET" access="isAuthenticated()"/>
    <security:intercept-url pattern="/user/*/groups" method="GET" access="isAuthenticated()"/>
    <security:intercept-url pattern="/user/*/groups/*" access="isAuthenticated()"/>
    <security:intercept-url pattern="/users/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/user/activate/**" access="permitAll()"/>

    <security:intercept-url pattern="/exception/**" access="permitAll()"/>

    <security:intercept-url pattern="/pm/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/pm/new/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/inbox" access="isAuthenticated()"/>
    <security:intercept-url pattern="/inbox/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/outbox" access="isAuthenticated()"/>
    <security:intercept-url pattern="/outbox/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/reply/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/quote/*" access="isAuthenticated()"/>
    <security:intercept-url pattern="/quote" access="isAuthenticated()"/>
    <security:intercept-url pattern="/drafts" access="isAuthenticated()"/>
    <security:intercept-url pattern="/answer" access="isAuthenticated()"/>

    <security:intercept-url pattern="/topics/new" access="isAuthenticated()"/>
    <security:intercept-url pattern="/topics/*/subscribe" access="isAuthenticated()"/>
    <security:intercept-url pattern="/topics/*/unsubscribe" access="isAuthenticated()"/>
    <security:intercept-url pattern="/topics/json/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/topics/*/edit" access="isAuthenticated()"/>

    <security:intercept-url pattern="/reviews/new" access="isAuthenticated()"/>

    <security:intercept-url pattern="/branch/permissions/*" access="isAuthenticated()"/>

    <!-- Since DELETE method is actually POST with _method=DELETE parameter -->
    <security:intercept-url pattern="/branches/*" method="DELETE"/>
    <security:intercept-url pattern="/sections/*" method="DELETE"/>
    <security:intercept-url pattern="/component" method="DELETE"/>

    <security:intercept-url pattern="/branches/*/subscribe" access="isAuthenticated()"/>
    <security:intercept-url pattern="/branches/*/unsubscribe" access="isAuthenticated()"/>

    <security:intercept-url pattern="/pages/*/edit" access="isAuthenticated()"/>
    <security:intercept-url pattern="/pages/create/**" access="isAuthenticated()"/>

    <security:intercept-url pattern="/poll/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/configuration/*" access="isAuthenticated()"/>

    <security:intercept-url pattern="/recent/forum/markread" access="isAuthenticated()"/>
    <security:intercept-url pattern="/main/forum/markread" access="isAuthenticated()"/>
    
    <security:form-login login-page="/login" login-processing-url="/j_spring_security_check"
                           default-target-url="/"
                           authentication-success-handler-ref="successAuthHandler"
                           authentication-failure-handler-ref="failureAuthHandler"/>

    <security:logout logout-url="/logout" logout-success-url="/" invalidate-session="true"/>
    <security:remember-me services-ref="rememberMeServices" key="JTalks" />

    <security:intercept-url pattern="/admin/enter" access="isAuthenticated()"/>
    <security:intercept-url pattern="/admin/exit" access="isAuthenticated()"/>

    <security:intercept-url pattern="/plugin/**" access="permitAll()"/>

    <security:intercept-url pattern="/plugins/**" access="isAuthenticated()"/>
    <security:intercept-url pattern="/group/list" access="isAuthenticated()"/>
    <security:intercept-url pattern="/spamprotection" access="isAuthenticated()"/>
    <security:intercept-url pattern="/spam-rule/**" access="isAuthenticated()"/>
  </security:http>

  <bean id="entryPoint403" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>
  <!-- Since HttpSessionRequestCache bean created for every <security:http> element declared in the context
        we need to define another HttpSessionRequestCache bean to make @Autowire possible-->
  <bean id="requestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache"/>

  <bean id="rememberMeServices"
        class="org.jtalks.jcommune.web.rememberme.ThrottlingRememberMeService">
    <constructor-arg ref="rememberMeCookieDecoder"/>
    <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
    <property name="userDetailsService" ref="securityService"/>
    <property name="tokenRepository" ref="tokenRepository"/>
    <property name="key" value="JTalks"/>
  </bean>
  <bean id="rememberMeCookieDecoder"
        class="org.jtalks.jcommune.web.rememberme.RememberMeCookieDecoderImpl" />
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <bean id="successAuthHandler"
        class="org.jtalks.jcommune.web.util.SuccessfulAuthenticationHandler">
    <constructor-arg ref="userService"/>
  </bean>

    <!--Needed to correct operation "logout". Was added with UsernamePasswordAuthenticationFilter.-->
  <bean id="failureAuthHandler"
        class="org.jtalks.jcommune.web.util.UserAuthenticationFailureHandler">
    <property name="defaultFailureUrl" value="/login?login_error=1"/>
  </bean>

  <bean id="concurrentSessionControlStrategy"
        class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
    <property name="maximumSessions" value="1"/>
  </bean>

  <bean id="rememberMeCheckFilter"
        class="org.jtalks.jcommune.web.filters.UsernamePasswordAuthenticationFilter">
    <constructor-arg ref="rememberMeCookieDecoder"/>
    <constructor-arg ref="rememberMeCheckService"/>
    <property name="authenticationManager" ref="authenticationManager"/>
    <!--Needed to correct operation "logout". May be successAuthHandler needed, too-->
    <property name="authenticationFailureHandler" ref="failureAuthHandler"/>
  </bean>
</beans>
