<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011  JTalks.org Team
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.
    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.
    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.jtalks.jcommune.model.entity">
    <class name="LastReadPost" table="LAST_READ_POSTS">
        <cache usage="read-write"/>
        <id name="id" column="ID" unsaved-value="0">
            <generator class="native"/>
        </id>
        <property name="uuid" column="UUID" unique="true" not-null="true"/>
        <properties name="userTopicUniqueConstraint" unique="true">
            <many-to-one name="user" column="USER_ID" class="org.jtalks.jcommune.model.entity.JCUser"/>
            <many-to-one name="topic" column="TOPIC_ID" class="Topic"/>
        </properties>
        <property name="postCreationDate" column="LAST_READ_POST_DATE"
                  type="org.joda.time.contrib.hibernate.PersistentDateTime" not-null="true"/>
    </class>

    <!-- Pay attention, in table LAST_READ_POSTS there is compound key (topic_id, user_id), therefore
         it is important to follow the order of columns in queries which use those columns. -->

    <query name="getLastReadPostInTopicForAllUsers">
        <![CDATA[FROM LastReadPost p where p.topic = :topic]]>
    </query>
    
    <query name="getLastReadPostsInTopicsForUser">
        <![CDATA[FROM LastReadPost p WHERE p.topic IN (:sourceTopics) and p.user = :user]]>
    </query>
    
    <query name="getLastReadPostInTopicForUser">
        <![CDATA[FROM LastReadPost p WHERE p.topic = :topic and p.user = :user]]>
    </query>
    
    <query name="deleteAllLastReadPostsOfUser">
        <![CDATA[DELETE FROM LastReadPost WHERE user = :user]]>
    </query>
    
    <query name="getAllOfUser">
        <![CDATA[FROM LastReadPost WHERE user = :user]]>
    </query>
</hibernate-mapping>